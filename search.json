[{"title":"Less学习指南","date":"2020-12-01T12:17:33.000Z","url":"/posts/a9d5fddb.html","categories":[["Less","/categories/Less/"]],"content":"less简介 Less （Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言。LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承， 运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。 我个人觉得使用less在书写大量的样式代码时显得十分重要，它通过变量、继承、混合、嵌套等语言特性，会极大提高css的书写效率，而且它的代码结构很好地保持了html的文档结构，也更加清晰易读！ 基于node.js的less 通过npm安装npm install less -g 命令行用法示例lessc style.less style.css 变量 less代码 编译后 嵌套 less代码 编译后 混合 less代码 编译后 运算 less代码 编译后 映射 从 Less 3.5 版本开始，你还可以将混合（mixins）和规则集（rulesets）作为一组值的映射（map）使用。 less代码 编译后 作用域 Less 中的作用域与 CSS 中的作用域非常类似。首先在本地查找变量和混合（mixins），如果找不到，则从“父”级作用域继承。 与 CSS 自定义属性一样，混合（mixin）和变量的定义不必在引用之前事先定义 所以对于局部变量来讲，要等到变量加载完毕后做决定 "},{"title":"CARDS主题 & 导航栏样式修改","date":"2020-11-28T15:38:38.000Z","url":"/posts/43277.html","tags":[["hexo主题样式修改","/tags/hexo%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/"]],"categories":[["HEXO","/categories/HEXO/"],["原创","/categories/HEXO/%E5%8E%9F%E5%88%9B/"]],"content":"每个人对于主题样式的感觉是不一样的，譬如字体大小，间距，高宽，距离，颜色等，我们可以一定程度内很直观地去修改主题的某些样式。 首先，在浏览器中利用开发者工具进行调试，找到我们所要改动的那部分结构，写入css样式，调试出我们所想得到的结果并记住所对应的样式选择器。 其次，我们需要在cards主题中找到拥有这些样式选择器的模块，修改代码，写入我们刚刚调试过的代码，最后执行清理、部署、运行即可。 主题main_color颜色配置，自定义喜欢的色调 导航栏顶部固定以及子栏目间距调整 在浏览器开发者工具模式预先调试出理想的样式，找出对应的选择器 在themes\\cards\\source\\css\\style\\_functions\\header.styl文档中，找到对应的选择器，修改样式 写在最后在最起初建站时，对HEXO还是足够陌生的！对于这样的系统文档的结构总是摸不到头脑。我其实一开始就想更改某些样式，但是无从下手，郁闷极了！ 在这种程度的状况下，我从配置文档说明开始研究，能搞懂多少是多少，在三番五次的折腾中，局势就慢慢开朗了！当然折腾从未结束，更多的问题还要去琢磨。"},{"title":"HEXO & CARDS主题进阶配置","date":"2020-11-28T13:09:24.000Z","url":"/posts/40862.html","tags":[["hexo主题配置","/tags/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"]],"categories":[["HEXO","/categories/HEXO/"],["原创","/categories/HEXO/%E5%8E%9F%E5%88%9B/"]],"content":"在默认的card主题之上，我设置了标签、分类、搜索、夜间模式、页面目录、footer部分以及延伸引入rss订阅,那么第二步要进行的是进一步丰富主题的功能和样式 为文章添加缩略图 可选择创建折叠文本样式 文章置顶设置 添加字数统计和阅读时长功能 为文章添加缩略图 打开 themes/cards/_config.yml配置文件，开启为true即可 在front-matter中，声明thumbnail，添加图片链接 可选择创建折叠文本样式 打开 themes/cards/_config.yml配置文件，打开fold内容折叠插件 在文章中使用插件，默认内容折叠 内容折叠默认展开，点击时折叠 文章置顶设置 官方插件原始文档 hexo-generator-topindex 安装$ npm install hexo-generator-topindex --save 在front-matter设置top属性，top值越大，优先级越高 我个人在最初使用时，好像提示该插件已经存在，似乎主题内置，很不clear，我是直接在头部声明top值就可置顶 为文章添加字数统计和阅读时长功能 官方插件文档 hexo-wordcount 安装插件npm i --save hexo-wordcount 找到主题文件夹下该路径themes\\cards\\layout\\_partial\\post\\post-content.ejs,添加代码，添加自定义文字，完成设定，注意：不要随意更改代码 原始文档 添加代码后 "},{"title":"HEXO & 给博客添加RSS","date":"2020-11-27T09:58:54.000Z","url":"/posts/60340.html","tags":[["hexo主题配置","/tags/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"]],"categories":[["HEXO","/categories/HEXO/"]],"content":"Hexo是一个简洁、高效、易用的博客框架，同时它拥有十分丰富的主题环境，本次我们所谈到的是cards主题，但是该主题的原生环境里没有相关的rss配置，所以我们需要采用手动添加的方式，进而实现rss功能的添加 安装feed插件cnpm install hexo-generator-feed 配置 _ config.yml文件，启用插件配置博客工程目录下的 _ config.yml文件 配置theme/cards主题中的 _ config.yml文件 生成rss hexo clean清除缓存 hexo generate生成静态文件 hexo deploy部署网站 hexo server启动服务器，即可在本地查看效果 复制菜单栏RSS项的链接，在rss阅读器中成功添加链接即可收到文章推送 "},{"title":"何为flex布局？","date":"2020-11-26T10:26:46.000Z","url":"/posts/22461.html","tags":[["flex","/tags/flex/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":" 简介：flex 是一个CSS的display 属性中新添加一个值。 随着inline-flex的使用，它将使它适用的元素成为一个flex container（伸缩容器），而这个元素的每个子元素将成为 flex item（伸缩项目）。 伸缩项目将参与到flex布局中，所有由CSS Flexible Box Layout Module（CSS伸缩盒布局模型）定义的属性都能被它们使用 主轴:默认情况下，主轴是x轴，侧轴是y轴，项目则排列在主轴方向上 flex 属性是flex-grow, flex-shrink 和 flex-basis 属性的简写。 参考文章 Flex布局教程 flex布局新、旧版属性对比 作用于 属性 新版flex 旧版flex 备注 容器上 语法 display:-webkit-flex/flex display:-webkit-box / 容器上 主轴方向 flex-direction:row/row-reversecolumn/column-reverse -webkit-box-orient:horizonal/vertical-webkit-box-direction:normal/reverse 主轴：x轴/y轴侧轴：与主轴垂直的另外一轴 容器上 主轴对齐方式 justify-content:flex-start/flex-end/centerspace-between/space-around -webkit-box-pack:start/end/center/justify 富余空间：取值为flex-start或start时富余空间在主轴的正方向上取值为flex-end或end时富余空间在主轴的反方向上 容器上 侧轴对齐方式 align-items:flex-start/flex-endcenter/baseline/strech -webkit-box-align:start/end/center 富余空间：取值为flex-start或start时富余空间在主轴的正方向上取值为flex-end或end时富余空间在主轴的反方向上 项目上 富余空间 flex-grow:0/1/auto -webkit-box-flex:0/1 flex-grow定义项目的放大比例 新版flex新增特性 作用于 属性 备注 容器上 flex-wrap:nowrap/warp/wrap-reverse 默认单行排列，宽度压缩时项目缩小取值非nowrap时，即是拥有侧轴方向wrap 侧轴正方向 wrap-reverse 侧轴反方向 容器上 align-content:start/end/center/space-between/space-around-strech 多行对齐时的整体堆砌方式 容器上 flex-grow:flex-direction+flex-wrap 决定着主轴、侧轴的方向 项目上 order:number 给项目标记数字，控制项目顺序 项目上 align-self: auto/start/end/center/space-between/space-around-strech 除去容器的align-items的设定，只管理自身的侧轴对齐方式 项目上 flow-basis:auto/0/1/autoflex-shrink:1/0/auto flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）它可以设为跟width或height属性一样的值，将项目占据固定空间 flex-shrink定义项目的缩小比例 等宽布局"},{"title":"全面了解transform属性","date":"2020-11-26T09:58:00.000Z","url":"/posts/45772.html","tags":[["transform","/tags/transform/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"transform取值 none：默认值，即是无转换 matrix(,,,,,)：以一个含六值的(a,b,c,d,e,f)变换矩阵的形式指定一个2D变换，相当于直接应用一个[a,b,c,d,e,f]变换矩阵 translate([, ])：指定对象的2D translation（2D平移）。第一个参数对应X轴，第二个参数对应Y轴。如果第二个参数未提供，则默认值为0 translateX()：指定对象X轴（水平方向）的平移 translateY()：指定对象Y轴（垂直方向）的平移 rotate()：指定对象的2D rotation（2D旋转），需先有transform-origin属性的定义 scale([, ])：指定对象的2D scale（2D缩放）。第一个参数对应X轴，第二个参数对应Y轴。如果第二个参数未提供，则默认取第一个参数的值 scaleX()：指定对象X轴的（水平方向）缩放 scaleY()：指定对象Y轴的（垂直方向）缩放 skew( [, ])：指定对象skew transformation（斜切扭曲）。第一个参数对应X轴，第二个参数对应Y轴。如果第二个参数未提供，则默认值为0 skewX()：指定对象X轴的（水平方向）扭曲 skewY()：指定对象Y轴的（垂直方向）扭曲 transform-origin属性定义：transform-origin 属性允许您改变被转换元素的位置(即是参考点)，需要了解的是，在transform中的存在的坐标系为，X轴向右，Y轴向下，Z轴朝向屏幕方向 取值： 默认值：50% 50% 0 ，基点即是2D所在图形的几何中心，在3D中即是绕着z轴旋转 取百分值%，依据坐标轴位置取百分值 length，依据坐标轴的位置取距离值 translate取值不受该属性的影响 取方向值，left,right,top,bottom center(即是center center或50% 50%) top(即是top center或50% 0) right(即是right center或100% 50%) bottom(即是bottom center或50% 100%) left(即是left center或0 50%) top left(即是0% 0%) top right(即是100% 0%) bottom left(即是0% 100%) bottom right(即是100% 100%) transform3D transform3D,是在translate2D的基础上增加z轴方向上的维度，再通过增加某些3D属性，营造出3D的感觉 rotate3D,默认情况下rotate的旋转中心是绕着z轴转动的转动方向依据顺正逆负，rotate( deg)=rotatez( deg),rotatex( deg)即是绕x轴由外往内旋转，rotatey( deg)即是绕y轴反向翻书方向旋转 transform:rotate3D(1,1,1,360deg);即是绕着三维空间的正方向距离起始位置较近的地方旋转 transform:translatez(100px) 对于x/y轴平移可以使用占用自身尺寸的百分比，z轴则只能使用length perspective景深即是我们眼睛注视屏幕的距离，它的作用是搭建舞台。它是一个不可继承的属性，但它可以作用于所有的后代元素。景深越大，灭点（随视角逐渐消失的点）越远，变形越小；景深越小，灭点越近，变形越大 transform-style的作用亦是搭建舞台，使3D舞台有层次感，该属性值仅作用于父元素 "},{"title":"CSS3 resize属性","date":"2020-11-21T07:50:12.000Z","url":"/posts/37811.html","tags":[["resize","/tags/resize/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"语法： resize：none | both | horizontal | vertical 默认值：none 适用于：所有设置了overflow除了visible之外的元素 继承性：无 说明： 设置或检索对象的区域是否允许用户缩放，调节元素尺寸大小。如果希望此属性生效，需要设置对象的overflow属性，值可以是auto,hidden或scroll。对应的脚本特性为resize。 代码示例及效果 "},{"title":"利用伪元素target制作多Tab切换效果","date":"2020-11-21T06:23:16.000Z","url":"/posts/4017.html","tags":[[":target","/tags/target/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":":target CSS 伪类 代表一个唯一的页面元素(目标元素)，其ID与当前URL片段匹配 标签a所拥有的片段（带有#标识的），该片段指向一个ID为leftBox的页面元素，上方片段的url=下方元素的ID 于是下方的元素可通过:target选择器被选中，在点击a标签时，div:target选择器的样式生效，发生改变。 完整代码及效果如下： "},{"title":"CSS3综合案例三","date":"2020-11-18T02:30:17.000Z","url":"/posts/30376.html","tags":[["transition","/tags/transition/"],["border-radius","/tags/border-radius/"],["relative","/tags/relative/"],["absolute","/tags/absolute/"],["text-decoration","/tags/text-decoration/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"仿天猫专题栏过渡效果实例需求 鼠标移入商品栏时，增加透明度 鼠标移入商品栏时，商品主图向左偏移几许，缓缓过渡 实例详情 效果"},{"title":"CSS3综合案例二","date":"2020-11-18T02:30:09.000Z","url":"/posts/5481.html","tags":[["transition","/tags/transition/"],["transform","/tags/transform/"],["opacity","/tags/opacity/"],["z-index","/tags/z-index/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"旧样式，仿天猫商品过渡效果实例需求 商品被包裹在圆形的底环下，为此要制作一个底环 当鼠标移入商品栏时，边距凸显红色 当鼠标移入商品栏时，图片变得透明几许 当鼠标移入商品栏时，商品主图过渡比例扩大，突出底环 实例详情 效果"},{"title":"CSS3综合案例一","date":"2020-11-18T02:30:01.000Z","url":"/posts/28776.html","tags":[["transition","/tags/transition/"],["transform","/tags/transform/"],["border-radius","/tags/border-radius/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"制作鼠标悬停，画面比例放大的效果实例需求 鼠标移入，画面扩大一定比例，移出则回归原态 画面扩大的过程要平滑进行 实例展示 效果"},{"title":"transition过渡效果","date":"2020-11-18T02:29:43.000Z","url":"/posts/64027.html","tags":[["transition","/tags/transition/"],["cursor","/tags/cursor/"],[":hover","/tags/hover/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"transition过渡效果transition同样亦是一个简写属性 transition-property: 属性选项 all指代所有属性，在这也可以只设置width/height，应用于单独某个属性 transition-duration:动画持续时间 transition-delay:延迟时间 transition-timing-function: esae是默认值，即整个过程先慢后快再慢。如果是ease-in,即是先慢后快；ease-out,即是先快后慢；ease-in-out,即是先慢后快再慢，和ease效果几乎等同实例 效果 "},{"title":"关于opacity的实例应用","date":"2020-11-18T02:29:32.000Z","url":"/posts/859.html","tags":[["opacity","/tags/opacity/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"关于opacity的实例应用综合应用 制作透明背景，凸显文字内容（实例一） 天猫商品栏图片鼠标移入透明度减低的效果（实例二） 实例一 效果 实例二 效果"},{"title":"伪类选择器和伪元素","date":"2020-11-17T05:15:00.000Z","url":"/posts/49535.html","tags":[["伪元素","/tags/%E4%BC%AA%E5%85%83%E7%B4%A0/"],["伪类选择器","/tags/%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"伪类选择器和伪元素伪类选择器 常用动态伪类选择器 (链接伪类) a:link a:visited a:hover a:active 常用UI状态选择器 (表单伪类) input:enable input:disabled input:checked 结构伪类选择器 使用结构伪类的各种属性选定子元素的方式，减少了类、id选择器的使用 常用结构伪类 :nth-child() :first-child() :last-child() :only-child()伪元素 常用伪元素 ::before ::after ::first-letter ::first-line 通过伪元素添加到元素区域的内容，是不可选中的，由于是伪元素 ::before,::after的妙用 通过在::before,:after中添加图片，实现图文布局 通过在::before,:after中绘图与元素组合，绘制特别的形状，诸如五角形、六角形、五边形、六边形、太极图等 意义：使样式更大限度回归到css中实现，更进一步实现结构和样式分离，层次分明 实例应用 动态伪类和ui元素伪类选择器 效果 结构伪类选择器 效果 伪元素使用 效果 ​ "},{"title":"border-radius画圆以及border绘制图形","date":"2020-11-16T16:00:00.000Z","url":"/posts/47609.html","tags":[["border-radius","/tags/border-radius/"],["border","/tags/border/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"border-radius画圆以及border绘制图形1. 利用border-radius绘制圆形类图形 border-radius是一个简写属性，它包含4个方向的属性设置 border-top-left-radius左上， border-top-right-radius右上 border-bottom-left-radius左下 border-bottom-right-radius右下 另外每个方向上的border-radius值由x/y方向上的半径决定，1个半径值则是正圆弧，2个半径值则是椭圆弧 4个值: 第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角。 3个值: 第一个值为左上角, 第二个值为右上角和左下角，第三个值为右下角 2个值: 第一个值为左上角与右下角，第二个值为右上角与左下角 1个值：四个圆角值相同 正方形+border-radius:50%即是正圆（如下示例） 若正方形任意一边缩减至1/2,则会绘制不同方向上的半圆和关于原点对称的圆弧（如下示例） 若正方形整体缩减1/2,则会绘制不同方向上的扇形（如下示例） 大小圆形的堆砌就会形成一个太极阴阳图（如下示例） 示例1 效果 示例2 效果 2. 妙用border属性绘制各种不同的形状 在1个只设有4边边距的盒子模型里，它呈现的结果是4个紧密集中的等腰三角形（如下示例） 在这4个紧密的等腰三角形中，左右2边边距决定的是这个盒子的宽度，上下2边边距则是盒子的高度 通过设置其中某边边距为0，或者相邻边边距透明，以及x/y方向上的边距，即可得到一个三角形和等腰直角三角形（如下示例） 在1个设有4边边距和内容区宽度的盒子模型里，通过边距为0和边距透明，会得到某个方向上的梯形（如下示例） 在梯形、三角形、矩形的基础上，通过伪元素即可组合得到五边形和六边形，或者五角形、六角形（如下示例） 三角形、等腰直角三角形、对话框示例 效果 五边形、六边形示例 效果 五角形、六角形示例 效果 "},{"title":"关于CSS3动画","date":"2020-11-16T16:00:00.000Z","url":"/posts/11943.html","tags":[["keyframes","/tags/keyframes/"],["animation","/tags/animation/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"CSS3动画制作一个CSS3动画需要2步 声明CSS3@keyframes规则 @keyframes规则内指定一个CSS样式和动画将逐步从目前的样式更改为新的样式 利用百分比来规定变化发生的时间，或用关键词from和to,等同于0%和100% 0%是动画的开始，100%是动画的结束 为了得到浏览器的最佳支持，应该始终定义0%和100% 将CSS3@keyframes规则绑定到指定的选择器上，使用animation设定动画属性 animation是简写属性 animation-name即是动画关键帧名字 animation-dration即是动画持续时间 animation-timing-function即是动画过渡函数 属性值有：linear/ease/ease-in/ease-out/ease-in-out animation-delay即是延迟时间 animation-iteration-count即是动画执行次数 对于属性值：infinite 即是无限循环 animation-direction即是动画执行方向 属性值normal为正常，alternate为反向播放*/ 简单的动画实例 loding加载动画 loding效果 矩形移动动画 效果 "},{"title":"关于渐变","date":"2020-11-16T16:00:00.000Z","url":"/posts/37680.html","tags":[["线性渐变","/tags/%E7%BA%BF%E6%80%A7%E6%B8%90%E5%8F%98/"],["径向渐变","/tags/%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98/"],["重复性渐变","/tags/%E9%87%8D%E5%A4%8D%E6%80%A7%E6%B8%90%E5%8F%98/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"关于渐变线性渐变 线性渐变（Linear Gradients）- 向下/向上/向左/向右/对角方向 语法background-image: linear-gradient(direction, color-stop1, color-stop2, ...);径向渐变 径向渐变（Radial Gradients）- 由它们的中心定义 语法background-image: radial-gradient(shape size at position, start-color, ..., last-color);线性渐变的使用角度实例 background-image:linear-gradient(to right,red 20%, blue 50%, green 80% background-image:radial-gradient(lightgreen 10%,lightgray 50%) background-image:repeating-linear-gradient(lightgreen 10%,lightblue 20%) 重复性线性渐变，径向渐变亦然 "},{"title":"文本特效和文本省略号","date":"2020-11-16T16:00:00.000Z","url":"/posts/38919.html","tags":[["text-shadow","/tags/text-shadow/"],["text-overflow","/tags/text-overflow/"],["white-space","/tags/white-space/"]],"categories":[["CSS3","/categories/CSS3/"]],"content":"text-shadow完成字体特效 效果 文本省略号 效果 "},{"date":"2020-11-27T15:11:47.139Z","url":"/404.html","categories":[[" ",""]],"content":" "},{"date":"2020-11-27T15:09:30.655Z","url":"/404.html","categories":[[" ",""]],"content":" "},{"date":"2020-11-17T12:50:37.230Z","url":"/categories/index.html","categories":[[" ",""]]},{"date":"2020-11-17T13:05:40.757Z","url":"/search/index.html","categories":[[" ",""]]},{"title":"标签","date":"2020-11-17T12:02:38.000Z","url":"/tags/index.html","categories":[[" ",""]]}]